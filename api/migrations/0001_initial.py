# Generated by Django 4.1.4 on 2022-12-24 19:54

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ComponentDump',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('body', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordering', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=300)),
                ('frontpage_featured', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
                ('delisted', models.BooleanField(default=False)),
                ('slug', models.CharField(blank=True, max_length=150, null=True)),
                ('extra_note', models.TextField(blank=True, null=True)),
                ('course_level_code', models.CharField(blank=True, max_length=20, null=True)),
                ('location_state', models.CharField(blank=True, max_length=50, null=True)),
                ('location_state_area', models.CharField(blank=True, max_length=50, null=True)),
                ('card_title', models.CharField(blank=True, max_length=100, null=True)),
                ('tech_subs', models.CharField(max_length=100, null=True)),
                ('audience', models.CharField(blank=True, max_length=100, null=True)),
                ('audience_description', models.TextField(blank=True, null=True)),
                ('description', models.TextField()),
                ('course_outline', models.TextField()),
                ('what_you_will_learn', models.TextField()),
                ('requirements', models.CharField(max_length=450)),
                ('prerequisites', models.CharField(max_length=450)),
                ('last_updated', models.DateTimeField()),
                ('card_thumb', models.ImageField(blank=True, null=True, upload_to='courseimg')),
                ('pic1', models.ImageField(blank=True, null=True, upload_to='courseimg')),
                ('pic2', models.ImageField(blank=True, null=True, upload_to='courseimg')),
                ('pic3', models.ImageField(blank=True, null=True, upload_to='courseimg')),
                ('seo_pagetitle', models.CharField(blank=True, max_length=200, null=True)),
                ('seo_metabulk', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='FeaturedProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=350)),
                ('student_name', models.CharField(max_length=150)),
                ('course_taken', models.CharField(max_length=150)),
                ('batch', models.DateField()),
                ('project_img', models.ImageField(upload_to='')),
                ('body', models.TextField()),
                ('project_url', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='SectionBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('banner_src', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(blank=True, max_length=50, null=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('mobile_numbers', models.CharField(max_length=250)),
                ('email_addresses', models.CharField(max_length=250)),
                ('profile_pic', models.ImageField(upload_to='students_profilepix/')),
                ('residential_address', models.CharField(max_length=250)),
                ('contact_address', models.CharField(max_length=250)),
                ('next_of_kin_fullname', models.CharField(max_length=150)),
                ('next_of_kin_contact_address', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='TechIcon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tech_name', models.CharField(max_length=150)),
                ('icon_img', models.ImageField(upload_to='techicons/')),
                ('popup_src', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=250)),
                ('student_pic', models.ImageField(upload_to='testimonial_pic/')),
                ('batch', models.DateField()),
                ('course_taken', models.CharField(max_length=150)),
                ('published', models.BooleanField(default=False)),
                ('body', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TopBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('banner_src', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('when_joined', models.DateField()),
                ('courses_taking', models.ManyToManyField(to='api.course')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField()),
                ('startdate', models.DateField(blank=True, null=True)),
                ('duration', models.CharField(max_length=50)),
                ('timing', models.CharField(blank=True, max_length=450)),
                ('fee', models.IntegerField(blank=True, null=True)),
                ('discounted_fee', models.IntegerField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.course')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.teacher')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='coursecategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.coursecategory'),
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('students', models.ManyToManyField(to='api.student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
